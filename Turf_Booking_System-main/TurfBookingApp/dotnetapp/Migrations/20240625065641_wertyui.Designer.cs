// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnetapp.Data;

#nullable disable

namespace dotnetapp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240625065641_wertyui")]
    partial class wertyui
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("dotnetapp.Models.Booking", b =>
                {
                    b.Property<int>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingID"), 1L, 1);

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DurationInMinutes")
                        .HasColumnType("int");

                    b.Property<int>("PartyHallID")
                        .HasColumnType("int");

                    b.HasKey("BookingID");

                    b.HasIndex("PartyHallID");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("dotnetapp.Models.PartyHall", b =>
                {
                    b.Property<int>("PartyHallID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartyHallID"), 1L, 1);

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartyHallID");

                    b.ToTable("PartyHalls");

                    b.HasData(
                        new
                        {
                            PartyHallID = 1,
                            Availability = true,
                            Capacity = 100,
                            Name = "Elegant Banquet Hall"
                        },
                        new
                        {
                            PartyHallID = 2,
                            Availability = true,
                            Capacity = 50,
                            Name = "Cozy Party Room"
                        },
                        new
                        {
                            PartyHallID = 3,
                            Availability = true,
                            Capacity = 200,
                            Name = "Grand Celebration Hall"
                        },
                        new
                        {
                            PartyHallID = 4,
                            Availability = true,
                            Capacity = 150,
                            Name = "Lavish Ballroom"
                        },
                        new
                        {
                            PartyHallID = 5,
                            Availability = true,
                            Capacity = 80,
                            Name = "Rustic Barn Venue"
                        });
                });

            modelBuilder.Entity("dotnetapp.Models.Booking", b =>
                {
                    b.HasOne("dotnetapp.Models.PartyHall", "PartyHall")
                        .WithMany("Bookings")
                        .HasForeignKey("PartyHallID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartyHall");
                });

            modelBuilder.Entity("dotnetapp.Models.PartyHall", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
