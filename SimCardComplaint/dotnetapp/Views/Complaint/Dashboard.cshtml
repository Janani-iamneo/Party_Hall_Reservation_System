@model List<dotnetapp.Models.Complaint>

<h2>Complaint Dashboard</h2>

<table class="table">
    <thead>
        <tr>
            <th>Customer Name</th>
            <th>SIM Card Number</th>
            <th>Description</th>
            <th>Status</th>
            <th>Executive Name</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var complaint in Model)
        {
            <tr>
                <td>@complaint.CustomerName</td>
                <td>@complaint.SIMCardNumber</td>
                <td>@complaint.Description</td>
                <td>@complaint.Status</td>
                <td>@(complaint.Executive != null ? complaint.Executive.ExecutiveName : "N/A")</td>
                <td>
                    <!-- Dropdown for Status Update -->
                    <form asp-controller="Complaint" asp-action="UpdateStatus" method="post">
                        <input type="hidden" name="complaintId" value="@complaint.ComplaintID" />
                        <td>
                            <select name="newStatus" class="status-dropdown">
                                <option value="Pending" selected="@(complaint.Status == "Pending")">Pending</option>
                                <option value="Under Investigation" selected="@(complaint.Status == "Under Investigation")">Under Investigation</option>
                                <option value="Resolved" selected="@(complaint.Status == "Resolved")">Resolved</option>
                                <!-- Add other status options based on your statuses -->
                            </select>
                        </td>
                        <td><button type="submit">Update Status</button></td>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Summary Labels -->
<div>
    <label>Total Complaints: @Model.Count()</label><br />
    <label>Total Pending Complaints: @Model.Count(c => c.Status == "Pending")</label><br />
    <label>Total Complaints under Investigation: @Model.Count(c => c.Status == "Under Investigation")</label><br />
    <label>Total Resolved Complaints: @Model.Count(c => c.Status == "Resolved")</label><br />
    <!-- Total days remaining for complaints under investigation will require further calculation based on your logic -->
</div>
